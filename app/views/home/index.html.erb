<%= stylesheet_link_tag "home" %>
<div class="topbar">
  <div class="global-nav">
    <div class="container">
      <div class="topbar-left" style="display: inline-block">
        <ul class="nav">
          <% @top_nav_lists.values.each do |li| %>
              <% if not li[:hidden] %>
                  <li class="top-list top-list-<%= li[:href][1..-1] %> <%= "active" if li[:text] == @init_active %> <%= "dropdown" if li[:dropdown] %>">
                    <a class="top-nav top-nav-left top-nav-<%= li[:href][1..-1] %>" href="<%= li[:href] %>">
                      <span class="icon icon-left <%= li[:icon].split('-')[0] %> <%= li[:icon] %> i-<%= li[:href][1..-1] %>"></span>
                      <span class="text"><%= li[:text] %></span>
                    </a>
                    <% if li[:dropdown] %>
                        <ul class="dropdown-content dc-<%= li[:text] %>">
                          <% li[:dropdown_content].values.each do |li| %>
                              <li><a href=<%= li[:link] %>><%= li[:text] %></a></li>
                          <% end %>
                        </ul>
                    <% end %>
                  </li>
              <% end %>
          <% end %>
        </ul>
      </div>
      <div class="topbar-right" style="display: inline-block">
        <ul class="nav">
          <% @top_nav_right_icons.values.each do |li| %>
              <li class="top-list top-list-<%= li[:href][1..-1] %>">
                <a class="top-nav top-nav-right" title="<%= li[:text] %>" href="<%= li[:href] %>">
                  <span class="icon icon-right fa <%= li[:icon] %>"></span>
                </a>
              </li>
          <% end %>


        </ul>
      </div>
    </div>
  </div>
</div>
<div class="content" id="<%= @top_nav_lists['home'][:href][1..-1] %>">
  <div class="container panel">
    <h1><%= @name %></h1>
    <hr/>
    <p>
      Ph.D. candidate<br/>
      <%= link_to("Computer Engineering & Systems Group", @cesg_site) %><br/>
      <%= link_to("Department of Electrical & Computer Engineering", @ece_site) %><br/>
      <%= link_to("Texas A&M University", @tamu_site) %><br/>
      College Station, Texas
    </p>
  </div>
  <div class="container panel" id="<%= @top_nav_lists['about'][:href][1..-1] %>">
    <h3><%= @anchor_text.call('about') %></h3>
    <p>I am a Ph.D. candidate majoring <%= link_to("Computer Engineering", @cesg_site) %>
      at Texas A&M University,
      advised by Prof. <a href="http://cesg.tamu.edu/faculty/Jiang-Hu/">Jiang Hu</a>.
      Currently, I am doing research on <a href="/dmhls">high-level synthesis</a>.
      I also have experience on approximate computing and bitwidth optimization.
      Prior to studying at Texas A&M University, I received the bachelor's degree in
      Electronics and Information Science
      from <%= link_to("Nanjing University", @nju_site) %> at Nanjing, China in 2013.
      <!--		<p>My research focuses on Computer-Aided Design (CAD) for Integrated Circuits (IC), which is mainly about designing algorithms to solve challenges emerging from the field of IC design. With that being said, I am more interested in positions on software design, especially positions involving system-level software, although I am also interested in hardware design.</p>
          <p>Since my research is more on solving new problems than improving existing methods for some problem, I also have strong capability in modeling or transforming engineering problems to mathematical / statistical / algorithmic problems. I have published one paper as first author at DAC, which is a top conference in the EDA field. The main contributions are just a novel statistical error model for approximate computing, and related algorithms based on the model.</p>
          <p>Currently, I am particularly interested in statistics, which in combination with computer science has spawned many new ideas/methods in fields such as machine learning ( where "statistical learning plays a dominating role" ) and data science. I believe algorithms backed up with theory of statistics, and implemented in machines will be a powerful tool.</p>
      -->
  </div>


  <div class="container panel" id="<%= @top_nav_lists['publications'][:href][1..-1] %>">
    <h3><%= @anchor_text.call('publications') %></h3>
    <ol class="publication-list">
      <li>Chaofan Li, Wei Luo, Sachin S. Sapatnekar and Jiang Hu.
        "<%= link_to('Joint precision optimization and high level synthesis for approximate computing',
                     "http://people.tamu.edu/~li3939108/LiDAC15a.pdf", {'class' => 'content-link file-link'}) %>".
        <em>52nd Design Automation Conference (DAC)</em>, June 2015.
        [<%= link_to('slides', 'http://people.tamu.edu/~li3939108/LiDAC15a_slides.pdf',
                     {'class' => 'content-link file-link'}) %>]
      </li>
      <li>Chaofan Li, <a href="http://people.ece.umn.edu/users/sachin">Sachin S. Sapatnekar</a> and Jiang Hu.
        "<%= link_to('Control Synthesis and Delay Sensor Deployment for Efficient ASV Designs',
                     "http://people.tamu.edu/~li3939108/LiICCAD16.pdf",
                     {'class' => 'content-link file-link'}) %>".
        <em>35th International Conference on Computer-Aided Design (ICCAD)</em>, Nov 2016.
        [<%= link_to('slides',
                     'http://people.tamu.edu/~li3939108/LiICCAD16_slides.pdf',
                     {'class' => 'content-link file-link'}) %>]
      </li>
    </ol>
  </div>
  <!--
	<div class="container panel" id="<%= @top_nav_lists['tools'][:href][1..-1] %>">
		<h3><%= @anchor_text.call('tools') %></h3>
		Something I think might be useful.
		
		<h4><a href=https://github.com/li3939108/Partitioning>Kernighan-Lin min-cut partitioning algorithm C implementation</a></h4>
		<p>Two people starred this project on my github page. So, maybe this old algorithm (See "<a href="https://dx.doi.org/10.1002%2Fj.1538-7305.1970.tb01770.x">An efficient heuristic procedure for partitioning graphs". 1970</a>) is still useful for VLSI CAD research. Anyway, when I implemented the algorithm, I didn't find any existing implementation I was satisfied with, although it is not very complex (less than 1000 lines of C codes). Since I am always a supporter for open-source and free software, I shared this implementation on my github page. </p>
	
		<h4>A Regular Graph Generator</h4>
		<p>(This is part of the course project for CPSC 629 by Prof. <a href="http://faculty.cs.tamu.edu/chen/">Jianer Chen</a>)</p>
		<p>A program I designed (or someone has designed before but I don't know) and implemented to generate random (I don't know if it is uniformly random) graphs with exactly the same degree for every vertex (i.e., regular graph). </p><p>Simply selecting random pairs of vertices isn't necessarily generating a graph with all vertices having the same degree. One common model called <em> pairing model</em> is to recursively select a random pair of vertices with degree less than what we want (suppose it is r), which will possibly generates either a multigraph, which is not simple, or a graph containing several r-regular subgraphs and several other complete subgraphs, which is not r-regular. However, the algorithm below certainly will generate a regular graph, if such a graph exists for a given number of vertices and a given degree for each vertex. </p> 
		<pre class="pseudo">
<strong>procedure</strong> gen (<em>D</em>, <em>V</em>) <%= cmt("D is the degree, V is number of vertices") %>
	<strong>for</strong> <em>i</em> from <em>0</em> to <em>D</em> <strong>do</strong> <%= cmt("Create D + 1 empty sets, to store vertices with corresponding degree") %>
		sets[<em>i</em>] ← [ ]
	<strong>end</strong>
	<strong>for</strong> <em>i</em> from <em>0</em> to <em>|V| - 1</em> <strong>do</strong> <%= cmt("Create |V| 0-degree vertices and store them in sets[0]") %>
		sets[<em>0</em>][<em>i</em>] ← new_vertex(<em>i + 1</em>) <%= cmt("label of vertex starting from 1") %>
	<strong>end</strong>
	<strong>while</strong> length(sets[<em>D</em>]) <%= "<" %> <em>|V| - 1</em> <strong>do</strong> <%= cmt("There are still vertices that can be connected to get more degrees") %>
		v1 ← pop( random_vertex( sets[<em>0</em> to <em>D-1</em>] ) ) <%= cmt("Extract a random vertex which is not in sets[D]") %>
		l ← D − degree(v1) <%= cmt("v1 needs l more degrees") %>
		<strong>for</strong> <em>i</em> from <em>1</em> to <em>l</em> <strong>do</strong>
			v2 ← pop( random min-degree vertex ) 
			<%= cmt("Extract a random vertex with minimal degree and not connected with v1") %>
			connect(v1, v2) <%= cmt("Degree of v2 increase by 1, update the adjacency list of v1 and v2") %>
			add( v2, sets[ degree(v2) ]) 
		<strong>end</strong>
		add(v1, sets[ <em>D</em> ])
	<strong>end</strong>
	<strong>return</strong> Graph( sets[<em>D</em>]) <%= cmt("sets[D] will be an adjacency list, create a graph with it") %>
<strong>end</strong>
		</pre>
		<p>
<table style="width: 200px;">
	<tr>
<td><%= link_to('Introduction.pdf', "http://people.tamu.edu/~li3939108/Introduction.pdf", {'class' => 'content-link file-link'}) %></td>
	</tr>
	<tr>
<td>Implementations</td>
	</tr>
<tr>
  <td>Python</td>
  <td><%= link_to('graph.py', "https://raw.githubusercontent.com/li3939108/max_bandwidth/master/graph.py", {'class' => 'content-link file-link'}) %></td>
</tr>
<tr>
  <td>C</td>
  <td>
<%= link_to('graph.h', "https://raw.githubusercontent.com/li3939108/Partitioning/master/graph.h", {'class' => 'content-link file-link'}) %>&nbsp;<%= link_to('graph.c', "https://raw.githubusercontent.com/li3939108/Partitioning/master/graph.c", {'class' => 'content-link file-link'}) %>
	</td>
</tr>
</table>
	<h4>A Ruby interface for Integer Linear Programming</h4>
	<p>Implemented in C as an extension of ruby, this tool enables ruby to solve the Integer Linear Programming (ILP) problem with LP solvers CPLEX, Gurobi and lp_solve. If you want, I think it is very simple to tune it to solve LP problems :)</p>
	<table style="width: 200px;">
<tr>
  <td><%= link_to('ilpext.zip', "https://github.com/li3939108/ilpext/archive/master.zip", {'class' => 'content-link file-link'}) %></td>
</tr>
</table>
	<h4>A Survey of Quantum Information written in Chinese</h4>
		<p>(This is my undergraduate thesis)</p>
		<table style="width: 200px;">
		<tr>
		  <td><%= link_to('Thesis', "http://people.tamu.edu/~li3939108/undergrad_thesis.pdf", {'class' => 'content-link file-link'}) %></td>
		</tr>
		</table>
	</div>
-->

  <div class="container panel" id="<%= @top_nav_lists['contacts'][:href][1..-1] %>">
    <h3><%= @anchor_text.call('contacts') %></h3>
    <ul class="vertical">
      <% @contacts.each do |list| %>
          <li>
            <span class="first-column">
              <% case list[:name] %>
              <% when "Office" %>
                  <%= content_tag('span', '',
                                  {:class => "contact-icon icon-link #{list[:icon].split('-')[0]} #{list[:icon]}",
                                   :id => "map-button",
                                   :title => "#{list[:title]}"})
                  %>
              <% else %>
                  <%= content_tag('span', '',
                                  {:class => "contact-icon #{list[:icon].split('-')[0]} #{list[:icon]}"}) %>
              <% end %>&nbsp;&nbsp;&nbsp;<%= list[:name] %></span><span class="second-column" style="<%= "height:"+(list[:lines]*18).to_s + "px;" if list[:lines] != nil %>"><%= list[:content] %></span>
          </li>

      <% end %>
      <li id="location-map">
        <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d6867.065532262262!2d-96.3377598509173!3d30.61893949607023!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0xf8e9083618c9fe91!2sDepartment+of+Electrical+and+Computer+Engineering!5e0!3m2!1sen!2sus!4v1394444107133" width=100% height="450" frameborder="0" style="border:0"></iframe>
      </li>
    </ul>
  </div>
  <div class="foot">
    Last updated at <span class="last-modify"><%= @last_modify_date %></span> ·
    <a class="text-link" href="https://github.com/li3939108/personal_page">Github project for this site</a><br/>
    <a title="Check the html5 validation of this site" href="http://validator.w3.org/check/referer"><span class=" fa fa-html5"></span></a>&nbsp;
    <a title="Check the CSS3 validation of this site" href="http://jigsaw.w3.org/css-validator/check/referer"><span class=" fa fa-css3"></span></a>
  </div>

</div>
